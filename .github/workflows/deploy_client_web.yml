name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - main
    paths:
      - 'client-web/**'  # Only trigger when changes are made to the client-web directory
jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - uses: actions/checkout@v4
      
      # Set up pnpm without specifying version (will use packageManager from package.json)
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      
      # Set up Node.js with pnpm caching
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      
      # Install Vercel CLI using pnpm
      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest
      
      # Pull Vercel Environment Information
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
      # Set working directory to client-web for all subsequent steps
      - name: Set Working Directory
        run: echo "Working in client-web directory"
        working-directory: ./client-web
      
      # Install dependencies in client-web directory
      - name: Install Dependencies
        run: pnpm install
        working-directory: ./client-web
      
      # Build Project Artifacts
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      # Deploy Project Artifacts to Vercel
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}